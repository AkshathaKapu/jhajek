# This file was autogenerated by the BETA 'packer hcl2_upgrade' command. We
# recommend double checking that everything is correct before going forward. We
# also recommend treating this file as disposable. The HCL2 blocks in this
# file can be moved to other files. For example, the variable blocks could be
# moved to their own 'variables.pkr.hcl' file, etc. Those files need to be
# suffixed with '.pkr.hcl' to be visible to Packer. To use multiple files at
# once they also need to be in the same folder. 'packer inspect folder/'
# will describe to you what is in that folder.

# Avoid mixing go templating calls ( for example ```{{ upper(`string`) }}``` )
# and HCL2 calls (for example '${ var.string_value_example }' ). They won't be
# executed together and the outcome will be unknown.

# All generated input variables will be of 'string' type as this is how Packer JSON
# views them; you can change their type later on. Read the variables type
# constraints documentation
# https://www.packer.io/docs/from-1.5/variables#type-constraints for more info.
variable "headless" {
  type    = string
  default = "false"
}

variable "memory" {
  type    = string
  default = "2048"
}

# "timestamp" template function replacement
locals { timestamp = regex_replace(timestamp(), "[- TZ:]", "") }

# source blocks are generated from your builders; a source can be referenced in
# build blocks. A build block runs provisioner and post-processors on a
# source. Read the documentation for source blocks here:
# https://www.packer.io/docs/from-1.5/blocks/source
# could not parse template for following block: "template: hcl2_upgrade:7:50: executing \"hcl2_upgrade\" at <.Version>: can't evaluate field Version in type struct { HTTPIP string; HTTPPort string }"

source "virtualbox-iso" "lb" {
  boot_command            = ["<esc><wait>", "<esc><wait>", "<enter><wait>", "/install/vmlinuz<wait>", " auto<wait>", " console-setup/ask_detect=false<wait>", " console-setup/layoutcode=us<wait>", " console-setup/modelcode=pc105<wait>", " debconf/frontend=noninteractive<wait>", " debian-installer=en_US<wait>", " fb=false<wait>", " initrd=/install/initrd.gz<wait>", " kbd-chooser/method=us<wait>", " keyboard-configuration/layout=USA<wait>", " keyboard-configuration/variant=USA<wait>", " locale=en_US<wait>", " netcfg/get_domain=vm<wait>", " netcfg/get_hostname=lb<wait>", " grub-installer/bootdev=/dev/sda<wait>", " noapic<wait>", " preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed/preseed.cfg<wait>", " -- <wait>", "<enter><wait>"]
  boot_wait               = "10s"
  disk_size               = 20000
  guest_additions_mode    = "disable"
  guest_additions_path    = "VBoxGuestAdditions_{{.Version}}.iso"
  guest_os_type           = "Ubuntu_64"
  headless                = "{{user `headless`}}"
  http_directory          = "."
  http_port_max           = 9050
  http_port_min           = 9001
  iso_checksum            = "sha256:8c5fc24894394035402f66f3824beb7234b757dd2b5531379cb310cedfdf0996"
  iso_urls                = ["http://cdimage.ubuntu.com/ubuntu/releases/bionic/release/ubuntu-18.04.5-server-amd64.iso"]
  shutdown_command        = "echo 'vagrant'|sudo -S shutdown -P now"
  ssh_password            = "vagrant"
  ssh_port                = 22
  ssh_username            = "vagrant"
  ssh_wait_timeout        = "10000s"
  vboxmanage              = [["modifyvm", "{{.Name}}", "--memory", "{{user `memory`}}"]]
  virtualbox_version_file = ".vbox_version"
  vm_name                 = "lb"
}

# could not parse template for following block: "template: hcl2_upgrade:7:50: executing \"hcl2_upgrade\" at <.Version>: can't evaluate field Version in type struct { HTTPIP string; HTTPPort string }"

source "virtualbox-iso" "mm" {
  boot_command            = ["<esc><wait>", "<esc><wait>", "<enter><wait>", "/install/vmlinuz<wait>", " auto<wait>", " console-setup/ask_detect=false<wait>", " console-setup/layoutcode=us<wait>", " console-setup/modelcode=pc105<wait>", " debconf/frontend=noninteractive<wait>", " debian-installer=en_US<wait>", " fb=false<wait>", " initrd=/install/initrd.gz<wait>", " kbd-chooser/method=us<wait>", " keyboard-configuration/layout=USA<wait>", " keyboard-configuration/variant=USA<wait>", " locale=en_US<wait>", " netcfg/get_domain=vm<wait>", " netcfg/get_hostname=mm<wait>", " grub-installer/bootdev=/dev/sda<wait>", " noapic<wait>", " preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed/preseed.cfg<wait>", " -- <wait>", "<enter><wait>"]
  boot_wait               = "10s"
  disk_size               = 10000
  guest_additions_mode    = "disable"
  guest_additions_path    = "VBoxGuestAdditions_{{.Version}}.iso"
  guest_os_type           = "Ubuntu_64"
  headless                = "{{user `headless`}}"
  http_directory          = "."
  http_port_max           = 9050
  http_port_min           = 9001
  iso_checksum            = "sha256:8c5fc24894394035402f66f3824beb7234b757dd2b5531379cb310cedfdf0996"
  iso_urls                = ["http://cdimage.ubuntu.com/ubuntu/releases/bionic/release/ubuntu-18.04.5-server-amd64.iso"]
  shutdown_command        = "echo 'vagrant'|sudo -S shutdown -P now"
  ssh_password            = "vagrant"
  ssh_port                = 22
  ssh_username            = "vagrant"
  ssh_wait_timeout        = "10000s"
  vboxmanage              = [["modifyvm", "{{.Name}}", "--memory", "{{user `memory`}}"]]
  virtualbox_version_file = ".vbox_version"
  vm_name                 = "mm"
}

# could not parse template for following block: "template: hcl2_upgrade:7:50: executing \"hcl2_upgrade\" at <.Version>: can't evaluate field Version in type struct { HTTPIP string; HTTPPort string }"

source "virtualbox-iso" "ms1" {
  boot_command            = ["<esc><wait>", "<esc><wait>", "<enter><wait>", "/install/vmlinuz<wait>", " auto<wait>", " console-setup/ask_detect=false<wait>", " console-setup/layoutcode=us<wait>", " console-setup/modelcode=pc105<wait>", " debconf/frontend=noninteractive<wait>", " debian-installer=en_US<wait>", " fb=false<wait>", " initrd=/install/initrd.gz<wait>", " kbd-chooser/method=us<wait>", " keyboard-configuration/layout=USA<wait>", " keyboard-configuration/variant=USA<wait>", " locale=en_US<wait>", " netcfg/get_domain=vm<wait>", " netcfg/get_hostname=ms1<wait>", " grub-installer/bootdev=/dev/sda<wait>", " noapic<wait>", " preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed/preseed.cfg<wait>", " -- <wait>", "<enter><wait>"]
  boot_wait               = "10s"
  disk_size               = 10000
  guest_additions_mode    = "disable"
  guest_additions_path    = "VBoxGuestAdditions_{{.Version}}.iso"
  guest_os_type           = "Ubuntu_64"
  headless                = "{{user `headless`}}"
  http_directory          = "."
  http_port_max           = 9050
  http_port_min           = 9001
  iso_checksum            = "sha256:8c5fc24894394035402f66f3824beb7234b757dd2b5531379cb310cedfdf0996"
  iso_urls                = ["http://cdimage.ubuntu.com/ubuntu/releases/bionic/release/ubuntu-18.04.5-server-amd64.iso"]
  shutdown_command        = "echo 'vagrant'|sudo -S shutdown -P now"
  ssh_password            = "vagrant"
  ssh_port                = 22
  ssh_username            = "vagrant"
  ssh_wait_timeout        = "10000s"
  vboxmanage              = [["modifyvm", "{{.Name}}", "--memory", "{{user `memory`}}"]]
  virtualbox_version_file = ".vbox_version"
  vm_name                 = "ms1"
}

# could not parse template for following block: "template: hcl2_upgrade:7:50: executing \"hcl2_upgrade\" at <.Version>: can't evaluate field Version in type struct { HTTPIP string; HTTPPort string }"

source "virtualbox-iso" "ms2" {
  boot_command            = ["<esc><wait>", "<esc><wait>", "<enter><wait>", "/install/vmlinuz<wait>", " auto<wait>", " console-setup/ask_detect=false<wait>", " console-setup/layoutcode=us<wait>", " console-setup/modelcode=pc105<wait>", " debconf/frontend=noninteractive<wait>", " debian-installer=en_US<wait>", " fb=false<wait>", " initrd=/install/initrd.gz<wait>", " kbd-chooser/method=us<wait>", " keyboard-configuration/layout=USA<wait>", " keyboard-configuration/variant=USA<wait>", " locale=en_US<wait>", " netcfg/get_domain=vm<wait>", " netcfg/get_hostname=ms2<wait>", " grub-installer/bootdev=/dev/sda<wait>", " noapic<wait>", " preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed/preseed.cfg<wait>", " -- <wait>", "<enter><wait>"]
  boot_wait               = "10s"
  disk_size               = 20000
  guest_additions_mode    = "disable"
  guest_additions_path    = "VBoxGuestAdditions_{{.Version}}.iso"
  guest_os_type           = "Ubuntu_64"
  headless                = "{{user `headless`}}"
  http_directory          = "."
  http_port_max           = 9050
  http_port_min           = 9001
  iso_checksum            = "sha256:8c5fc24894394035402f66f3824beb7234b757dd2b5531379cb310cedfdf0996"
  iso_urls                = ["http://cdimage.ubuntu.com/ubuntu/releases/bionic/release/ubuntu-18.04.5-server-amd64.iso"]
  shutdown_command        = "echo 'vagrant'|sudo -S shutdown -P now"
  ssh_password            = "vagrant"
  ssh_port                = 22
  ssh_username            = "vagrant"
  ssh_wait_timeout        = "10000s"
  vboxmanage              = [["modifyvm", "{{.Name}}", "--memory", "{{user `memory`}}"]]
  virtualbox_version_file = ".vbox_version"
  vm_name                 = "ms2"
}

# could not parse template for following block: "template: hcl2_upgrade:7:50: executing \"hcl2_upgrade\" at <.Version>: can't evaluate field Version in type struct { HTTPIP string; HTTPPort string }"

source "virtualbox-iso" "ws1" {
  boot_command            = ["<esc><wait>", "<esc><wait>", "<enter><wait>", "/install/vmlinuz<wait>", " auto<wait>", " console-setup/ask_detect=false<wait>", " console-setup/layoutcode=us<wait>", " console-setup/modelcode=pc105<wait>", " debconf/frontend=noninteractive<wait>", " debian-installer=en_US<wait>", " fb=false<wait>", " initrd=/install/initrd.gz<wait>", " kbd-chooser/method=us<wait>", " keyboard-configuration/layout=USA<wait>", " keyboard-configuration/variant=USA<wait>", " locale=en_US<wait>", " netcfg/get_domain=vm<wait>", " netcfg/get_hostname=ws1<wait>", " grub-installer/bootdev=/dev/sda<wait>", " noapic<wait>", " preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed/preseed.cfg<wait>", " -- <wait>", "<enter><wait>"]
  boot_wait               = "10s"
  disk_size               = 20000
  guest_additions_mode    = "disable"
  guest_additions_path    = "VBoxGuestAdditions_{{.Version}}.iso"
  guest_os_type           = "Ubuntu_64"
  headless                = "{{user `headless`}}"
  http_directory          = "."
  http_port_max           = 9050
  http_port_min           = 9001
  iso_checksum            = "sha256:8c5fc24894394035402f66f3824beb7234b757dd2b5531379cb310cedfdf0996"
  iso_urls                = ["http://cdimage.ubuntu.com/ubuntu/releases/bionic/release/ubuntu-18.04.5-server-amd64.iso"]
  shutdown_command        = "echo 'vagrant'|sudo -S shutdown -P now"
  ssh_password            = "vagrant"
  ssh_port                = 22
  ssh_username            = "vagrant"
  ssh_wait_timeout        = "10000s"
  vboxmanage              = [["modifyvm", "{{.Name}}", "--memory", "{{user `memory`}}"]]
  virtualbox_version_file = ".vbox_version"
  vm_name                 = "ws1"
}

# could not parse template for following block: "template: hcl2_upgrade:7:50: executing \"hcl2_upgrade\" at <.Version>: can't evaluate field Version in type struct { HTTPIP string; HTTPPort string }"

source "virtualbox-iso" "ws2" {
  boot_command            = ["<esc><wait>", "<esc><wait>", "<enter><wait>", "/install/vmlinuz<wait>", " auto<wait>", " console-setup/ask_detect=false<wait>", " console-setup/layoutcode=us<wait>", " console-setup/modelcode=pc105<wait>", " debconf/frontend=noninteractive<wait>", " debian-installer=en_US<wait>", " fb=false<wait>", " initrd=/install/initrd.gz<wait>", " kbd-chooser/method=us<wait>", " keyboard-configuration/layout=USA<wait>", " keyboard-configuration/variant=USA<wait>", " locale=en_US<wait>", " netcfg/get_domain=vm<wait>", " netcfg/get_hostname=ws2<wait>", " grub-installer/bootdev=/dev/sda<wait>", " noapic<wait>", " preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed/preseed.cfg<wait>", " -- <wait>", "<enter><wait>"]
  boot_wait               = "10s"
  disk_size               = 20000
  guest_additions_mode    = "disable"
  guest_additions_path    = "VBoxGuestAdditions_{{.Version}}.iso"
  guest_os_type           = "Ubuntu_64"
  headless                = "{{user `headless`}}"
  http_directory          = "."
  http_port_max           = 9050
  http_port_min           = 9001
  iso_checksum            = "sha256:8c5fc24894394035402f66f3824beb7234b757dd2b5531379cb310cedfdf0996"
  iso_urls                = ["http://cdimage.ubuntu.com/ubuntu/releases/bionic/release/ubuntu-18.04.5-server-amd64.iso"]
  shutdown_command        = "echo 'vagrant'|sudo -S shutdown -P now"
  ssh_password            = "vagrant"
  ssh_port                = 22
  ssh_username            = "vagrant"
  ssh_wait_timeout        = "10000s"
  vboxmanage              = [["modifyvm", "{{.Name}}", "--memory", "{{user `memory`}}"]]
  virtualbox_version_file = ".vbox_version"
  vm_name                 = "ws2"
}

# could not parse template for following block: "template: hcl2_upgrade:7:50: executing \"hcl2_upgrade\" at <.Version>: can't evaluate field Version in type struct { HTTPIP string; HTTPPort string }"

source "virtualbox-iso" "ws3" {
  boot_command            = ["<esc><wait>", "<esc><wait>", "<enter><wait>", "/install/vmlinuz<wait>", " auto<wait>", " console-setup/ask_detect=false<wait>", " console-setup/layoutcode=us<wait>", " console-setup/modelcode=pc105<wait>", " debconf/frontend=noninteractive<wait>", " debian-installer=en_US<wait>", " fb=false<wait>", " initrd=/install/initrd.gz<wait>", " kbd-chooser/method=us<wait>", " keyboard-configuration/layout=USA<wait>", " keyboard-configuration/variant=USA<wait>", " locale=en_US<wait>", " netcfg/get_domain=vm<wait>", " netcfg/get_hostname=ws3<wait>", " grub-installer/bootdev=/dev/sda<wait>", " noapic<wait>", " preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed/preseed.cfg<wait>", " -- <wait>", "<enter><wait>"]
  boot_wait               = "10s"
  disk_size               = 20000
  guest_additions_mode    = "disable"
  guest_additions_path    = "VBoxGuestAdditions_{{.Version}}.iso"
  guest_os_type           = "Ubuntu_64"
  headless                = "{{user `headless`}}"
  http_directory          = "."
  http_port_max           = 9050
  http_port_min           = 9001
  iso_checksum            = "sha256:8c5fc24894394035402f66f3824beb7234b757dd2b5531379cb310cedfdf0996"
  iso_urls                = ["http://cdimage.ubuntu.com/ubuntu/releases/bionic/release/ubuntu-18.04.5-server-amd64.iso"]
  shutdown_command        = "echo 'vagrant'|sudo -S shutdown -P now"
  ssh_password            = "vagrant"
  ssh_port                = 22
  ssh_username            = "vagrant"
  ssh_wait_timeout        = "10000s"
  vboxmanage              = [["modifyvm", "{{.Name}}", "--memory", "{{user `memory`}}"]]
  virtualbox_version_file = ".vbox_version"
  vm_name                 = "ws3"
}

# a build block invokes sources and runs provisioning steps on them. The
# documentation for build blocks can be found here:
# https://www.packer.io/docs/from-1.5/blocks/build
build {
  sources = ["source.virtualbox-iso.lb", "source.virtualbox-iso.mm", "source.virtualbox-iso.ms1", "source.virtualbox-iso.ms2", "source.virtualbox-iso.ws1", "source.virtualbox-iso.ws2", "source.virtualbox-iso.ws3"]

  provisioner "file" {
    destination = "/home/vagrant/"
    source      = "./id_rsa_github_deploy_key"
  }
  provisioner "file" {
    destination = "/home/vagrant/"
    source      = "./config"
  }
  provisioner "file" {
    destination = "/home/vagrant/"
    only        = ["ws1", "ws2", "ws3"]
    source      = "./config.default.yml"
  }

  # could not parse template for following block: "template: hcl2_upgrade:2:41: executing \"hcl2_upgrade\" at <.Vars>: can't evaluate field Vars in type struct { HTTPIP string; HTTPPort string }"
  provisioner "shell" {
    execute_command = "echo 'vagrant' | {{ .Vars }} sudo -E -S sh '{{ .Path }}'"
    inline          = ["mkdir -p /home/vagrant/.ssh", "mkdir -p /root/.ssh", "chmod 600 /home/vagrant/id_rsa_github_deploy_key", "cp -v /home/vagrant/id_rsa_github_deploy_key /home/vagrant/.ssh/", "cp -v /home/vagrant/config /home/vagrant/.ssh/", "cp -v /home/vagrant/config /root/.ssh/", "git clone git@github.com:illinoistech-itm/hajek.git"]
  }

  # could not parse template for following block: "template: hcl2_upgrade:3:42: executing \"hcl2_upgrade\" at <.Vars>: can't evaluate field Vars in type struct { HTTPIP string; HTTPPort string }"
  provisioner "shell" {
    environment_vars = ["LBIP={{user `load-balancer-ip`}}", "WS1IP={{user `webserver-one-ip`}}", "WS2IP={{user `webserver-two-ip`}}", "WS3IP={{user `webserver-three-ip`}}", "REDIP={{user `redis-server-ip`}}", "MMIP={{user `maria-master-ip`}}", "MS1IP={{user `maria-slave1-ip`}}", "MS2IP={{user `maria-slave2-ip`}}", "MS3IP={{user `maria-slave3-ip`}}"]
    execute_command  = "echo 'vagrant' | {{ .Vars }} sudo -E -S sh '{{ .Path }}'"
    only             = ["lb"]
    script           = "../scripts/post_install_vagrant-fs-lb.sh"
  }

  # could not parse template for following block: "template: hcl2_upgrade:3:42: executing \"hcl2_upgrade\" at <.Vars>: can't evaluate field Vars in type struct { HTTPIP string; HTTPPort string }"
  provisioner "shell" {
    environment_vars = ["LBIP={{user `load-balancer-ip`}}", "WS1IP={{user `webserver-one-ip`}}", "WS2IP={{user `webserver-two-ip`}}", "WS3IP={{user `webserver-three-ip`}}", "REDIP={{user `redis-server-ip`}}", "MMIP={{user `maria-master-ip`}}", "MS1IP={{user `maria-slave1-ip`}}", "MS2IP={{user `maria-slave2-ip`}}", "MS3IP={{user `maria-slave3-ip`}}"]
    execute_command  = "echo 'vagrant' | {{ .Vars }} sudo -E -S sh '{{ .Path }}'"
    only             = ["ws1"]
    script           = "../scripts/post_install_vagrant-fs-ws1.sh"
  }

  # could not parse template for following block: "template: hcl2_upgrade:3:42: executing \"hcl2_upgrade\" at <.Vars>: can't evaluate field Vars in type struct { HTTPIP string; HTTPPort string }"
  provisioner "shell" {
    environment_vars = ["LBIP={{user `load-balancer-ip`}}", "WS1IP={{user `webserver-one-ip`}}", "WS2IP={{user `webserver-two-ip`}}", "WS3IP={{user `webserver-three-ip`}}", "REDIP={{user `redis-server-ip`}}", "MMIP={{user `maria-master-ip`}}", "MS1IP={{user `maria-slave1-ip`}}", "MS2IP={{user `maria-slave2-ip`}}", "MS3IP={{user `maria-slave3-ip`}}"]
    execute_command  = "echo 'vagrant' | {{ .Vars }} sudo -E -S sh '{{ .Path }}'"
    only             = ["ws2"]
    script           = "../scripts/post_install_vagrant-fs-ws2.sh"
  }

  # could not parse template for following block: "template: hcl2_upgrade:3:42: executing \"hcl2_upgrade\" at <.Vars>: can't evaluate field Vars in type struct { HTTPIP string; HTTPPort string }"
  provisioner "shell" {
    environment_vars = ["LBIP={{user `load-balancer-ip`}}", "WS1IP={{user `webserver-one-ip`}}", "WS2IP={{user `webserver-two-ip`}}", "WS3IP={{user `webserver-three-ip`}}", "REDIP={{user `redis-server-ip`}}", "MMIP={{user `maria-master-ip`}}", "MS1IP={{user `maria-slave1-ip`}}", "MS2IP={{user `maria-slave2-ip`}}", "MS3IP={{user `maria-slave3-ip`}}"]
    execute_command  = "echo 'vagrant' | {{ .Vars }} sudo -E -S sh '{{ .Path }}'"
    only             = ["ws3"]
    script           = "../scripts/post_install_vagrant-fs-ws3.sh"
  }

  # could not parse template for following block: "template: hcl2_upgrade:3:42: executing \"hcl2_upgrade\" at <.Vars>: can't evaluate field Vars in type struct { HTTPIP string; HTTPPort string }"
  provisioner "shell" {
    environment_vars = ["LBIP={{user `load-balancer-ip`}}", "WS1IP={{user `webserver-one-ip`}}", "WS2IP={{user `webserver-two-ip`}}", "WS3IP={{user `webserver-three-ip`}}", "REDIP={{user `redis-server-ip`}}", "MMIP={{user `maria-master-ip`}}", "MS1IP={{user `maria-slave1-ip`}}", "MS2IP={{user `maria-slave2-ip`}}", "MS3IP={{user `maria-slave3-ip`}}", "DBPASS={{user `database-root-pw`}}", "ACCESSFROMIP={{user `database-access-range`}}", "USERPASS={{user `user-database-password`}}", "FIREWALLACCESS={{user `ubuntu-firewall-access-range`}}"]
    execute_command  = "echo 'vagrant' | {{ .Vars }} sudo -E -S sh '{{ .Path }}'"
    only             = ["mm"]
    script           = "../scripts/post_install_vagrant-fs-mm.sh"
  }

  # could not parse template for following block: "template: hcl2_upgrade:3:42: executing \"hcl2_upgrade\" at <.Vars>: can't evaluate field Vars in type struct { HTTPIP string; HTTPPort string }"
  provisioner "shell" {
    environment_vars = ["LBIP={{user `load-balancer-ip`}}", "WS1IP={{user `webserver-one-ip`}}", "WS2IP={{user `webserver-two-ip`}}", "WS3IP={{user `webserver-three-ip`}}", "REDIP={{user `redis-server-ip`}}", "MMIP={{user `maria-master-ip`}}", "MS1IP={{user `maria-slave1-ip`}}", "MS2IP={{user `maria-slave2-ip`}}", "MS3IP={{user `maria-slave3-ip`}}", "DBPASS={{user `database-root-pw`}}", "ACCESSFROMIP={{user `database-access-range`}}", "USERPASS={{user `user-database-password`}}", "FIREWALLACCESS={{user `ubuntu-firewall-access-range`}}"]
    execute_command  = "echo 'vagrant' | {{ .Vars }} sudo -E -S sh '{{ .Path }}'"
    only             = ["ms1"]
    script           = "../scripts/post_install_vagrant-fs-ms1.sh"
  }

  # could not parse template for following block: "template: hcl2_upgrade:3:42: executing \"hcl2_upgrade\" at <.Vars>: can't evaluate field Vars in type struct { HTTPIP string; HTTPPort string }"
  provisioner "shell" {
    environment_vars = ["LBIP={{user `load-balancer-ip`}}", "WS1IP={{user `webserver-one-ip`}}", "WS2IP={{user `webserver-two-ip`}}", "WS3IP={{user `webserver-three-ip`}}", "REDIP={{user `redis-server-ip`}}", "MMIP={{user `maria-master-ip`}}", "MS1IP={{user `maria-slave1-ip`}}", "MS2IP={{user `maria-slave2-ip`}}", "MS3IP={{user `maria-slave3-ip`}}", "DBPASS={{user `database-root-pw`}}", "ACCESSFROMIP={{user `database-access-range`}}", "USERPASS={{user `user-database-password`}}", "FIREWALLACCESS={{user `ubuntu-firewall-access-range`}}"]
    execute_command  = "echo 'vagrant' | {{ .Vars }} sudo -E -S sh '{{ .Path }}'"
    only             = ["ms2"]
    script           = "../scripts/post_install_vagrant-fs-ms2.sh"
  }

  # could not parse template for following block: "template: hcl2_upgrade:3:36: executing \"hcl2_upgrade\" at <.BuildName>: can't evaluate field BuildName in type struct { HTTPIP string; HTTPPort string }"
  post-processor "vagrant" {
    keep_input_artifact = false
    output              = "../build/{{.BuildName}}-{{.Provider}}-{{timestamp}}.box"
  }
}
